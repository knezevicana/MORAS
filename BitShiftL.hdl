CHIP BitShiftL {
	IN in[16];
	OUT out[16];
	
	PARTS:
	And16( a[1..15] = in[0..14], b[1..15] = in[0..14], a[0] = false, b[0] = false, out = out) ; // ovdje pomicemo ulijevo, nulti je indeks false (ignoriramo), a zadnji 0
  }
